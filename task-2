** 1. Import Required Libraries **

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
data = pd.read_csv("movies.csv")

# Display first few rows
print(data.head())

# Features (input variables)
X = data[['Genre', 'Director', 'Actor1', 'Actor2', 'Actor3']]

# Target variable (output we want to predict)
y = data['Rating']

# Convert text (categorical) data into numbers
X = pd.get_dummies(X, drop_first=True)

# 80% training and 20% testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the model
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)

# Make predictions
lr_predictions = lr_model.predict(X_test)

# Evaluate the model
print("Linear Regression RMSE:", np.sqrt(mean_squared_error(y_test, lr_predictions)))
print("Linear Regression R2 Score:", r2_score(y_test, lr_predictions))

# Create and train the model
rf_model = RandomForestRegressor(random_state=42)
rf_model.fit(X_train, y_train)

# Make predictions
rf_predictions = rf_model.predict(X_test)

# Evaluate the model
print("Random Forest RMSE:", np.sqrt(mean_squared_error(y_test, rf_predictions)))
print("Random Forest R2 Score:", r2_score(y_test, rf_predictions))

#Linear Regression provides a quick baseline.
